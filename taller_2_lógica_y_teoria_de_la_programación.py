# -*- coding: utf-8 -*-
"""Taller 2 Lógica y Teoria de la Programación.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ajB59MiN_rDp3pi2XcwmpPweqq3sHY0-
"""

import numpy as np
import matplotlib.pyplot as plt
import skfuzzy as fuzz
from skfuzzy import control

x_experiencia = np.arange(0,12,1)
x_tiempo = np.arange(0,120,1)
x_decada = np.arange(1990,2023,1)

x_categoria = np.arange(1,34,1)

experiencia = control.Antecedent(x_experiencia,"Experiencia")
tiempo = control.Antecedent(x_tiempo,"Tiempo")
decada = control.Antecedent(x_decada,"Decada")
categoria = control.Consequent(x_categoria,"Categoria",'centroid')

# Funciones de membresia
experiencia["Novato"] = fuzz.trimf(x_experiencia, [0, 0, 5])
experiencia["Experimentado"] = fuzz.trimf(x_experiencia, [0, 5, 10])
experiencia["Experto"] = fuzz.trimf(x_experiencia, [5, 10, 10])

tiempo["Poco"] = fuzz.zmf(x_tiempo, 0, 29)
tiempo["Medio"] = fuzz.pimf(x_tiempo, 20, 35,45,60)
tiempo["Mucho"] = fuzz.smf(x_tiempo, 60, 120)

decada["Noventas"] = fuzz.trimf(x_decada, [1990,1995,1999])
decada["Dosmil"] = fuzz.trimf(x_decada, [2000,2005,2009])
decada["Dosmildiez"] = fuzz.trimf(x_decada, [2010,2015,2019])

categoria["Accion"] = fuzz.zmf(x_categoria, 0,7)
categoria["Plataforma"] = fuzz.pimf(x_categoria, 6,8,12,14)
categoria["Arcade"] = fuzz.trimf(x_categoria, [14,18,21])
categoria["Aventura"] = fuzz.smf(x_categoria, 21,28)
categoria["Puzzle"] = fuzz.trimf(x_categoria, [29,33,33])

regla1 = control.Rule(tiempo["Poco"] & experiencia["Experto"] & decada["Noventas"], categoria["Arcade"])
regla2 = control.Rule(tiempo["Mucho"] & experiencia["Experimentado"], categoria["Plataforma"])
regla3 = control.Rule(tiempo["Medio"] & experiencia["Experto"] & decada["Dosmildiez"], categoria["Puzzle"])
regla4 = control.Rule(tiempo["Mucho"] & experiencia["Novato"], categoria["Aventura"])
regla5 = control.Rule((tiempo["Poco"] | experiencia["Experimentado"]) & decada["Noventas"], categoria["Plataforma"])
regla6 = control.Rule(tiempo["Poco"] & experiencia["Experto"] & decada["Dosmil"], categoria["Plataforma"])
regla7 = control.Rule(tiempo["Mucho"] | experiencia["Experto"], categoria["Arcade"])
regla8 = control.Rule(tiempo["Poco"] & experiencia["Experimentado"], categoria["Plataforma"])

categoriaCtrl = control.ControlSystem([regla1,regla2,regla3,regla4,regla5,regla6,regla7,regla8])
categoriaSim = control.ControlSystemSimulation(categoriaCtrl)

#Inputs
categoriaSim.input['Experiencia'] = 3
categoriaSim.input['Tiempo'] = 90.1
categoriaSim.input['Decada'] = 2000
categoriaSim.compute()

print(categoriaSim.output['Categoria'])

experiencia.view()

tiempo.view()

decada.view()

categoria.view()

categoria.view(sim=categoriaSim)